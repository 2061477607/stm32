<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FANKE_FK7B0M1_V1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FANKE_FK7B0M1_V1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jan 17 20:01:04 2023
<BR><P>
<H3>Maximum Stack Usage =          0 bytes</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[72]"></a>__asm___10_FlashPrg_c_Init____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flashprg.o(.rev16_text), UNUSED)

<P><STRONG><a name="[73]"></a>__asm___13_ospi_w25q64_c_75525878____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ospi_w25q64.o(.rev16_text), UNUSED)

<P><STRONG><a name="[74]"></a>__asm___14_SystemConfig_c_2a3ab6ca____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, systemconfig.o(.rev16_text), UNUSED)

<P><STRONG><a name="[75]"></a>__asm___15_stm32h7xx_hal_c_3da258af____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.rev16_text), UNUSED)

<P><STRONG><a name="[76]"></a>__asm___22_stm32h7xx_hal_cortex_c_2992dbc0____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.rev16_text), UNUSED)

<P><STRONG><a name="[77]"></a>__asm___20_stm32h7xx_hal_gpio_c_ea787061____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.rev16_text), UNUSED)

<P><STRONG><a name="[78]"></a>__asm___20_stm32h7xx_hal_ospi_c_fb30ef9a____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(.rev16_text), UNUSED)

<P><STRONG><a name="[79]"></a>__asm___19_stm32h7xx_hal_pwr_c_f2cfe8be____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7a]"></a>__asm___22_stm32h7xx_hal_pwr_ex_c_75a25fd4____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7b]"></a>__asm___19_stm32h7xx_hal_rcc_c_b7071a4b____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7c]"></a>__asm___22_stm32h7xx_hal_rcc_ex_c_bed13b44____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7d]"></a>__asm___20_stm32h7xx_hal_mdma_c_49e2804d____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7e]"></a>__asm___18_system_stm32h7xx_c_5d646a67____REV16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_stm32h7xx.o(.rev16_text), UNUSED)

<P><STRONG><a name="[7f]"></a>__asm___10_FlashPrg_c_Init____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flashprg.o(.revsh_text), UNUSED)

<P><STRONG><a name="[80]"></a>__asm___13_ospi_w25q64_c_75525878____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ospi_w25q64.o(.revsh_text), UNUSED)

<P><STRONG><a name="[81]"></a>__asm___14_SystemConfig_c_2a3ab6ca____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, systemconfig.o(.revsh_text), UNUSED)

<P><STRONG><a name="[82]"></a>__asm___15_stm32h7xx_hal_c_3da258af____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.revsh_text), UNUSED)

<P><STRONG><a name="[83]"></a>__asm___22_stm32h7xx_hal_cortex_c_2992dbc0____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.revsh_text), UNUSED)

<P><STRONG><a name="[84]"></a>__asm___20_stm32h7xx_hal_gpio_c_ea787061____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.revsh_text), UNUSED)

<P><STRONG><a name="[85]"></a>__asm___20_stm32h7xx_hal_ospi_c_fb30ef9a____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(.revsh_text), UNUSED)

<P><STRONG><a name="[86]"></a>__asm___19_stm32h7xx_hal_pwr_c_f2cfe8be____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.revsh_text), UNUSED)

<P><STRONG><a name="[87]"></a>__asm___22_stm32h7xx_hal_pwr_ex_c_75a25fd4____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.revsh_text), UNUSED)

<P><STRONG><a name="[88]"></a>__asm___19_stm32h7xx_hal_rcc_c_b7071a4b____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.revsh_text), UNUSED)

<P><STRONG><a name="[89]"></a>__asm___22_stm32h7xx_hal_rcc_ex_c_bed13b44____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.revsh_text), UNUSED)

<P><STRONG><a name="[8a]"></a>__asm___20_stm32h7xx_hal_mdma_c_49e2804d____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.revsh_text), UNUSED)

<P><STRONG><a name="[8b]"></a>__asm___18_system_stm32h7xx_c_5d646a67____REVSH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_stm32h7xx.o(.revsh_text), UNUSED)

<P><STRONG><a name="[8c]"></a>__asm___10_FlashPrg_c_Init____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flashprg.o(.rrx_text), UNUSED)

<P><STRONG><a name="[8d]"></a>__asm___13_ospi_w25q64_c_75525878____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ospi_w25q64.o(.rrx_text), UNUSED)

<P><STRONG><a name="[8e]"></a>__asm___14_SystemConfig_c_2a3ab6ca____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systemconfig.o(.rrx_text), UNUSED)

<P><STRONG><a name="[8f]"></a>__asm___15_stm32h7xx_hal_c_3da258af____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.rrx_text), UNUSED)

<P><STRONG><a name="[90]"></a>__asm___22_stm32h7xx_hal_cortex_c_2992dbc0____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.rrx_text), UNUSED)

<P><STRONG><a name="[91]"></a>__asm___20_stm32h7xx_hal_gpio_c_ea787061____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.rrx_text), UNUSED)

<P><STRONG><a name="[92]"></a>__asm___20_stm32h7xx_hal_ospi_c_fb30ef9a____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(.rrx_text), UNUSED)

<P><STRONG><a name="[93]"></a>__asm___19_stm32h7xx_hal_pwr_c_f2cfe8be____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.rrx_text), UNUSED)

<P><STRONG><a name="[94]"></a>__asm___22_stm32h7xx_hal_pwr_ex_c_75a25fd4____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.rrx_text), UNUSED)

<P><STRONG><a name="[95]"></a>__asm___19_stm32h7xx_hal_rcc_c_b7071a4b____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.rrx_text), UNUSED)

<P><STRONG><a name="[96]"></a>__asm___22_stm32h7xx_hal_rcc_ex_c_bed13b44____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.rrx_text), UNUSED)

<P><STRONG><a name="[97]"></a>__asm___20_stm32h7xx_hal_mdma_c_49e2804d____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.rrx_text), UNUSED)

<P><STRONG><a name="[98]"></a>__asm___18_system_stm32h7xx_c_5d646a67____RRX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_stm32h7xx.o(.rrx_text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>BlankCheck</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flashprg.o(i.BlankCheck), UNUSED)

<P><STRONG><a name="[0]"></a>EraseChip</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flashprg.o(i.EraseChip), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ChipErase
</UL>

<P><STRONG><a name="[2]"></a>EraseSector</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flashprg.o(i.EraseSector), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_64K
</UL>

<P><STRONG><a name="[9d]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_DisableDBGSleepMode), UNUSED)

<P><STRONG><a name="[9e]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_DisableDBGStandbyMode), UNUSED)

<P><STRONG><a name="[9f]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_DisableDBGStopMode), UNUSED)

<P><STRONG><a name="[a0]"></a>HAL_DBGMCU_EnableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_EnableDBGSleepMode), UNUSED)

<P><STRONG><a name="[a1]"></a>HAL_DBGMCU_EnableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_EnableDBGStandbyMode), UNUSED)

<P><STRONG><a name="[a2]"></a>HAL_DBGMCU_EnableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DBGMCU_EnableDBGStopMode), UNUSED)

<P><STRONG><a name="[4]"></a>HAL_DeInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_DeInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspDeInit
</UL>

<P><STRONG><a name="[6]"></a>HAL_Delay</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_Delay), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[a3]"></a>HAL_DisableCompensationCell</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DisableCompensationCell), UNUSED)

<P><STRONG><a name="[a4]"></a>HAL_DisableDomain3DBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DisableDomain3DBGStandbyMode), UNUSED)

<P><STRONG><a name="[a5]"></a>HAL_DisableDomain3DBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_DisableDomain3DBGStopMode), UNUSED)

<P><STRONG><a name="[a6]"></a>HAL_EXTI_D1_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_EXTI_D1_ClearFlag), UNUSED)

<P><STRONG><a name="[a7]"></a>HAL_EXTI_D1_EventInputConfig</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, stm32h7xx_hal.o(i.HAL_EXTI_D1_EventInputConfig), UNUSED)

<P><STRONG><a name="[a8]"></a>HAL_EXTI_D3_EventInputConfig</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_EXTI_D3_EventInputConfig), UNUSED)

<P><STRONG><a name="[a9]"></a>HAL_EXTI_EdgeConfig</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_EXTI_EdgeConfig), UNUSED)

<P><STRONG><a name="[aa]"></a>HAL_EXTI_GenerateSWInterrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_EXTI_GenerateSWInterrupt), UNUSED)

<P><STRONG><a name="[ab]"></a>HAL_EnableCompensationCell</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_EnableCompensationCell), UNUSED)

<P><STRONG><a name="[ac]"></a>HAL_EnableDomain3DBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_EnableDomain3DBGStandbyMode), UNUSED)

<P><STRONG><a name="[ad]"></a>HAL_EnableDomain3DBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_EnableDomain3DBGStopMode), UNUSED)

<P><STRONG><a name="[ae]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 328 bytes, Stack size 20 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_DeInit), UNUSED)

<P><STRONG><a name="[9]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[8]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[2c]"></a>HAL_GPIO_Init</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_Init), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
</UL>

<P><STRONG><a name="[af]"></a>HAL_GPIO_LockPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_LockPin), UNUSED)

<P><STRONG><a name="[b0]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_ReadPin), UNUSED)

<P><STRONG><a name="[b1]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_TogglePin), UNUSED)

<P><STRONG><a name="[b2]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_WritePin), UNUSED)

<P><STRONG><a name="[b3]"></a>HAL_GetCurrentCPUID</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_GetCurrentCPUID), UNUSED)

<P><STRONG><a name="[b4]"></a>HAL_GetDEVID</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetDEVID), UNUSED)

<P><STRONG><a name="[b5]"></a>HAL_GetFMCMemorySwappingConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetFMCMemorySwappingConfig), UNUSED)

<P><STRONG><a name="[b6]"></a>HAL_GetHalVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetHalVersion), UNUSED)

<P><STRONG><a name="[40]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetREVID), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRSConfig
</UL>

<P><STRONG><a name="[7]"></a>HAL_GetTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTick), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_EnableVREFBUF
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBReg
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableBkUpReg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUSBReg
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableBkUpReg
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_HyperbusCmd
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_HyperbusCfg
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command_IT
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling_IT
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Abort
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_PollForTransfer
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort
</UL>

<P><STRONG><a name="[b7]"></a>HAL_GetTickFreq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTickFreq), UNUSED)

<P><STRONG><a name="[b8]"></a>HAL_GetTickPrio</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTickPrio), UNUSED)

<P><STRONG><a name="[b9]"></a>HAL_GetUIDw0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetUIDw0), UNUSED)

<P><STRONG><a name="[ba]"></a>HAL_GetUIDw1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetUIDw1), UNUSED)

<P><STRONG><a name="[bb]"></a>HAL_GetUIDw2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetUIDw2), UNUSED)

<P><STRONG><a name="[bc]"></a>HAL_IncTick</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_IncTick), UNUSED)

<P><STRONG><a name="[a]"></a>HAL_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[d]"></a>HAL_InitTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systemconfig.o(i.HAL_InitTick), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SetTickFreq
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
</UL>

<P><STRONG><a name="[f]"></a>HAL_MDMA_Abort</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Abort), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_PollForTransfer
</UL>

<P><STRONG><a name="[bd]"></a>HAL_MDMA_Abort_IT</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Abort_IT), UNUSED)

<P><STRONG><a name="[be]"></a>HAL_MDMA_ConfigPostRequestMask</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_ConfigPostRequestMask), UNUSED)

<P><STRONG><a name="[bf]"></a>HAL_MDMA_DeInit</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_DeInit), UNUSED)

<P><STRONG><a name="[c0]"></a>HAL_MDMA_GenerateSWRequest</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_GenerateSWRequest), UNUSED)

<P><STRONG><a name="[c1]"></a>HAL_MDMA_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_GetError), UNUSED)

<P><STRONG><a name="[c2]"></a>HAL_MDMA_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_GetState), UNUSED)

<P><STRONG><a name="[c3]"></a>HAL_MDMA_IRQHandler</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_IRQHandler), UNUSED)

<P><STRONG><a name="[10]"></a>HAL_MDMA_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_Init
</UL>

<P><STRONG><a name="[c4]"></a>HAL_MDMA_LinkedList_AddNode</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_LinkedList_AddNode), UNUSED)

<P><STRONG><a name="[c5]"></a>HAL_MDMA_LinkedList_CreateNode</STRONG> (Thumb, 266 bytes, Stack size 12 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_LinkedList_CreateNode), UNUSED)

<P><STRONG><a name="[c6]"></a>HAL_MDMA_LinkedList_DisableCircularMode</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_LinkedList_DisableCircularMode), UNUSED)

<P><STRONG><a name="[c7]"></a>HAL_MDMA_LinkedList_EnableCircularMode</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_LinkedList_EnableCircularMode), UNUSED)

<P><STRONG><a name="[c8]"></a>HAL_MDMA_LinkedList_RemoveNode</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_LinkedList_RemoveNode), UNUSED)

<P><STRONG><a name="[12]"></a>HAL_MDMA_PollForTransfer</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_PollForTransfer), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort
</UL>

<P><STRONG><a name="[c9]"></a>HAL_MDMA_RegisterCallback</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_RegisterCallback), UNUSED)

<P><STRONG><a name="[13]"></a>HAL_MDMA_Start</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Start), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_SetConfig
</UL>

<P><STRONG><a name="[15]"></a>HAL_MDMA_Start_IT</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_Start_IT), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MDMA_SetConfig
</UL>

<P><STRONG><a name="[ca]"></a>HAL_MDMA_UnRegisterCallback</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.HAL_MDMA_UnRegisterCallback), UNUSED)

<P><STRONG><a name="[cb]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_MPU_ConfigRegion), UNUSED)

<P><STRONG><a name="[cc]"></a>HAL_MPU_Disable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_MPU_Disable), UNUSED)

<P><STRONG><a name="[cd]"></a>HAL_MPU_Enable</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_MPU_Enable), UNUSED)

<P><STRONG><a name="[5]"></a>HAL_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_MspDeInit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DeInit
</UL>

<P><STRONG><a name="[e]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_MspInit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ce]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_ClearPendingIRQ), UNUSED)

<P><STRONG><a name="[cf]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ), UNUSED)

<P><STRONG><a name="[d0]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ), UNUSED)

<P><STRONG><a name="[d1]"></a>HAL_NVIC_GetActive</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_GetActive), UNUSED)

<P><STRONG><a name="[d2]"></a>HAL_NVIC_GetPendingIRQ</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_GetPendingIRQ), UNUSED)

<P><STRONG><a name="[d3]"></a>HAL_NVIC_GetPriority</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_GetPriority), UNUSED)

<P><STRONG><a name="[16]"></a>HAL_NVIC_GetPriorityGrouping</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_GetPriorityGrouping), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[d4]"></a>HAL_NVIC_SetPendingIRQ</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPendingIRQ), UNUSED)

<P><STRONG><a name="[18]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriority), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[b]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SystemReset), UNUSED)

<P><STRONG><a name="[1a]"></a>HAL_OSPIM_Config</STRONG> (Thumb, 1764 bytes, Stack size 80 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPIM_Config), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPIM_GetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[1c]"></a>HAL_OSPI_Abort</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Abort), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[d6]"></a>HAL_OSPI_AbortCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_AbortCpltCallback), UNUSED)

<P><STRONG><a name="[1e]"></a>HAL_OSPI_AutoPolling</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_AutoPolling), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ChipErase
</UL>

<P><STRONG><a name="[1f]"></a>HAL_OSPI_AutoPolling_IT</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_AutoPolling_IT), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[d7]"></a>HAL_OSPI_CmdCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_CmdCpltCallback), UNUSED)

<P><STRONG><a name="[20]"></a>HAL_OSPI_Command</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Command), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WritePage
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_SectorErase
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadID
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_MemoryMappedMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_32K
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadBuffer
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ChipErase
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_64K
</UL>

<P><STRONG><a name="[22]"></a>HAL_OSPI_Command_IT</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Command_IT), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_ConfigCmd
</UL>

<P><STRONG><a name="[23]"></a>HAL_OSPI_DeInit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_DeInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[d8]"></a>HAL_OSPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_ErrorCallback), UNUSED)

<P><STRONG><a name="[d9]"></a>HAL_OSPI_FifoThresholdCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_FifoThresholdCallback), UNUSED)

<P><STRONG><a name="[da]"></a>HAL_OSPI_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_GetError), UNUSED)

<P><STRONG><a name="[db]"></a>HAL_OSPI_GetFifoThreshold</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_GetFifoThreshold), UNUSED)

<P><STRONG><a name="[dc]"></a>HAL_OSPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_GetState), UNUSED)

<P><STRONG><a name="[25]"></a>HAL_OSPI_HyperbusCfg</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_HyperbusCfg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[26]"></a>HAL_OSPI_HyperbusCmd</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_HyperbusCmd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[27]"></a>HAL_OSPI_Init</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MspInit
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_SetTimeout
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[2a]"></a>HAL_OSPI_MemoryMapped</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_MemoryMapped), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_MemoryMappedMode
</UL>

<P><STRONG><a name="[24]"></a>HAL_OSPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_MspDeInit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_DeInit
</UL>

<P><STRONG><a name="[28]"></a>HAL_OSPI_MspInit</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, ospi_w25q64.o(i.HAL_OSPI_MspInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
</UL>

<P><STRONG><a name="[2d]"></a>HAL_OSPI_Receive</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Receive), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadID
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadBuffer
</UL>

<P><STRONG><a name="[dd]"></a>HAL_OSPI_Receive_IT</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Receive_IT), UNUSED)

<P><STRONG><a name="[de]"></a>HAL_OSPI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_RxCpltCallback), UNUSED)

<P><STRONG><a name="[df]"></a>HAL_OSPI_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_RxHalfCpltCallback), UNUSED)

<P><STRONG><a name="[e0]"></a>HAL_OSPI_SetFifoThreshold</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_SetFifoThreshold), UNUSED)

<P><STRONG><a name="[29]"></a>HAL_OSPI_SetTimeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_SetTimeout), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
</UL>

<P><STRONG><a name="[e1]"></a>HAL_OSPI_StatusMatchCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_StatusMatchCallback), UNUSED)

<P><STRONG><a name="[e2]"></a>HAL_OSPI_TimeOutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_TimeOutCallback), UNUSED)

<P><STRONG><a name="[2e]"></a>HAL_OSPI_Transmit</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Transmit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WritePage
</UL>

<P><STRONG><a name="[e3]"></a>HAL_OSPI_Transmit_IT</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_Transmit_IT), UNUSED)

<P><STRONG><a name="[e4]"></a>HAL_OSPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_TxCpltCallback), UNUSED)

<P><STRONG><a name="[e5]"></a>HAL_OSPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ospi.o(i.HAL_OSPI_TxHalfCpltCallback), UNUSED)

<P><STRONG><a name="[36]"></a>HAL_PWREx_AVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_AVDCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
</UL>

<P><STRONG><a name="[e6]"></a>HAL_PWREx_ClearPendingEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ClearPendingEvent), UNUSED)

<P><STRONG><a name="[e7]"></a>HAL_PWREx_ClearWakeupFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ClearWakeupFlag), UNUSED)

<P><STRONG><a name="[e8]"></a>HAL_PWREx_ConfigAVD</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigAVD), UNUSED)

<P><STRONG><a name="[e9]"></a>HAL_PWREx_ConfigD3Domain</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigD3Domain), UNUSED)

<P><STRONG><a name="[6e]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigSupply), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ea]"></a>HAL_PWREx_ControlStopModeVoltageScaling</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ControlStopModeVoltageScaling), UNUSED)

<P><STRONG><a name="[2f]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[eb]"></a>HAL_PWREx_DisableAVD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableAVD), UNUSED)

<P><STRONG><a name="[ec]"></a>HAL_PWREx_DisableAnalogBooster</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableAnalogBooster), UNUSED)

<P><STRONG><a name="[ed]"></a>HAL_PWREx_DisableBatteryCharging</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableBatteryCharging), UNUSED)

<P><STRONG><a name="[30]"></a>HAL_PWREx_DisableBkUpReg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableBkUpReg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[ee]"></a>HAL_PWREx_DisableFlashPowerDown</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableFlashPowerDown), UNUSED)

<P><STRONG><a name="[ef]"></a>HAL_PWREx_DisableMemoryShutOff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableMemoryShutOff), UNUSED)

<P><STRONG><a name="[f0]"></a>HAL_PWREx_DisableMonitoring</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableMonitoring), UNUSED)

<P><STRONG><a name="[31]"></a>HAL_PWREx_DisableUSBReg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableUSBReg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[f1]"></a>HAL_PWREx_DisableUSBVoltageDetector</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableUSBVoltageDetector), UNUSED)

<P><STRONG><a name="[f2]"></a>HAL_PWREx_DisableWakeUpPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_DisableWakeUpPin), UNUSED)

<P><STRONG><a name="[f3]"></a>HAL_PWREx_EnableAVD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableAVD), UNUSED)

<P><STRONG><a name="[f4]"></a>HAL_PWREx_EnableAnalogBooster</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableAnalogBooster), UNUSED)

<P><STRONG><a name="[f5]"></a>HAL_PWREx_EnableBatteryCharging</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableBatteryCharging), UNUSED)

<P><STRONG><a name="[32]"></a>HAL_PWREx_EnableBkUpReg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableBkUpReg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[f6]"></a>HAL_PWREx_EnableFlashPowerDown</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableFlashPowerDown), UNUSED)

<P><STRONG><a name="[f7]"></a>HAL_PWREx_EnableMemoryShutOff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableMemoryShutOff), UNUSED)

<P><STRONG><a name="[f8]"></a>HAL_PWREx_EnableMonitoring</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableMonitoring), UNUSED)

<P><STRONG><a name="[33]"></a>HAL_PWREx_EnableUSBReg</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableUSBReg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[f9]"></a>HAL_PWREx_EnableUSBVoltageDetector</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableUSBVoltageDetector), UNUSED)

<P><STRONG><a name="[fa]"></a>HAL_PWREx_EnableWakeUpPin</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableWakeUpPin), UNUSED)

<P><STRONG><a name="[fb]"></a>HAL_PWREx_EnterSTANDBYMode</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnterSTANDBYMode), UNUSED)

<P><STRONG><a name="[fc]"></a>HAL_PWREx_EnterSTOP2Mode</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnterSTOP2Mode), UNUSED)

<P><STRONG><a name="[fd]"></a>HAL_PWREx_EnterSTOPMode</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnterSTOPMode), UNUSED)

<P><STRONG><a name="[fe]"></a>HAL_PWREx_GetMMCVoltage</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetMMCVoltage), UNUSED)

<P><STRONG><a name="[ff]"></a>HAL_PWREx_GetStopModeVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetStopModeVoltageRange), UNUSED)

<P><STRONG><a name="[100]"></a>HAL_PWREx_GetSupplyConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetSupplyConfig), UNUSED)

<P><STRONG><a name="[101]"></a>HAL_PWREx_GetTemperatureLevel</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetTemperatureLevel), UNUSED)

<P><STRONG><a name="[102]"></a>HAL_PWREx_GetVBATLevel</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetVBATLevel), UNUSED)

<P><STRONG><a name="[103]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange), UNUSED)

<P><STRONG><a name="[104]"></a>HAL_PWREx_GetWakeupFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_GetWakeupFlag), UNUSED)

<P><STRONG><a name="[34]"></a>HAL_PWREx_PVD_AVD_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_PVD_AVD_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_AVDCallback
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
</UL>

<P><STRONG><a name="[37]"></a>HAL_PWREx_WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WAKEUP_PIN_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP6_Callback
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP5_Callback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP4_Callback
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP3_Callback
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP2_Callback
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP1_Callback
</UL>

<P><STRONG><a name="[38]"></a>HAL_PWREx_WKUP1_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP1_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>HAL_PWREx_WKUP2_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP2_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>HAL_PWREx_WKUP3_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP3_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3b]"></a>HAL_PWREx_WKUP4_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP4_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>HAL_PWREx_WKUP5_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP5_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>HAL_PWREx_WKUP6_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_WKUP6_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[105]"></a>HAL_PWR_ConfigPVD</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_ConfigPVD), UNUSED)

<P><STRONG><a name="[106]"></a>HAL_PWR_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DeInit), UNUSED)

<P><STRONG><a name="[107]"></a>HAL_PWR_DisableBkUpAccess</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DisableBkUpAccess), UNUSED)

<P><STRONG><a name="[108]"></a>HAL_PWR_DisablePVD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DisablePVD), UNUSED)

<P><STRONG><a name="[109]"></a>HAL_PWR_DisableSEVOnPend</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DisableSEVOnPend), UNUSED)

<P><STRONG><a name="[10a]"></a>HAL_PWR_DisableSleepOnExit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DisableSleepOnExit), UNUSED)

<P><STRONG><a name="[10b]"></a>HAL_PWR_DisableWakeUpPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_DisableWakeUpPin), UNUSED)

<P><STRONG><a name="[10c]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess), UNUSED)

<P><STRONG><a name="[10d]"></a>HAL_PWR_EnablePVD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnablePVD), UNUSED)

<P><STRONG><a name="[10e]"></a>HAL_PWR_EnableSEVOnPend</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnableSEVOnPend), UNUSED)

<P><STRONG><a name="[10f]"></a>HAL_PWR_EnableSleepOnExit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnableSleepOnExit), UNUSED)

<P><STRONG><a name="[110]"></a>HAL_PWR_EnableWakeUpPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnableWakeUpPin), UNUSED)

<P><STRONG><a name="[111]"></a>HAL_PWR_EnterSLEEPMode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnterSLEEPMode), UNUSED)

<P><STRONG><a name="[112]"></a>HAL_PWR_EnterSTANDBYMode</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnterSTANDBYMode), UNUSED)

<P><STRONG><a name="[113]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_EnterSTOPMode), UNUSED)

<P><STRONG><a name="[35]"></a>HAL_PWR_PVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_PVDCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVD_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>HAL_PWR_PVD_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr.o(i.HAL_PWR_PVD_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
</UL>

<P><STRONG><a name="[3f]"></a>HAL_RCCEx_CRSConfig</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRSConfig), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>

<P><STRONG><a name="[114]"></a>HAL_RCCEx_CRSGetSynchronizationInfo</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRSGetSynchronizationInfo), UNUSED)

<P><STRONG><a name="[115]"></a>HAL_RCCEx_CRSSoftwareSynchronizationGenerate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRSSoftwareSynchronizationGenerate), UNUSED)

<P><STRONG><a name="[116]"></a>HAL_RCCEx_CRSWaitSynchronization</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRSWaitSynchronization), UNUSED)

<P><STRONG><a name="[45]"></a>HAL_RCCEx_CRS_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRS_ErrorCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>HAL_RCCEx_CRS_ExpectedSyncCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRS_ExpectedSyncCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>HAL_RCCEx_CRS_IRQHandler</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRS_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncWarnCallback
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncOkCallback
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ExpectedSyncCallback
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ErrorCallback
</UL>

<P><STRONG><a name="[42]"></a>HAL_RCCEx_CRS_SyncOkCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRS_SyncOkCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>HAL_RCCEx_CRS_SyncWarnCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_CRS_SyncWarnCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[117]"></a>HAL_RCCEx_DisableLSECSS</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_DisableLSECSS), UNUSED)

<P><STRONG><a name="[118]"></a>HAL_RCCEx_EnableLSECSS</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_EnableLSECSS), UNUSED)

<P><STRONG><a name="[119]"></a>HAL_RCCEx_EnableLSECSS_IT</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_EnableLSECSS_IT), UNUSED)

<P><STRONG><a name="[46]"></a>HAL_RCCEx_GetD1PCLK1Freq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD1PCLK1Freq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[48]"></a>HAL_RCCEx_GetD1SysClockFreq</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD1SysClockFreq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[49]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD3PCLK1Freq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[4b]"></a>HAL_RCCEx_GetPLL1ClockFreq</STRONG> (Thumb, 536 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL1ClockFreq), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[4c]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 536 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL2ClockFreq), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[4d]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 536 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL3ClockFreq), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[11a]"></a>HAL_RCCEx_GetPeriphCLKConfig</STRONG> (Thumb, 590 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKConfig), UNUSED)

<P><STRONG><a name="[4a]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 1604 bytes, Stack size 64 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKFreq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL1ClockFreq
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
</UL>

<P><STRONG><a name="[11b]"></a>HAL_RCCEx_KerWakeUpStopCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_KerWakeUpStopCLKConfig), UNUSED)

<P><STRONG><a name="[4f]"></a>HAL_RCCEx_LSECSS_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_LSECSS_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>HAL_RCCEx_LSECSS_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_LSECSS_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_Callback
</UL>

<P><STRONG><a name="[50]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2730 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[11c]"></a>HAL_RCCEx_WakeUpStopCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_WakeUpStopCLKConfig), UNUSED)

<P><STRONG><a name="[59]"></a>HAL_RCC_CSSCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_CSSCallback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_NMI_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 758 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_ClockConfig), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[54]"></a>HAL_RCC_DeInit</STRONG> (Thumb, 528 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_DeInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[11d]"></a>HAL_RCC_DisableCSS</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_DisableCSS), UNUSED)

<P><STRONG><a name="[11e]"></a>HAL_RCC_EnableCSS</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_EnableCSS), UNUSED)

<P><STRONG><a name="[11f]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetClockConfig), UNUSED)

<P><STRONG><a name="[47]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1PCLK1Freq
</UL>

<P><STRONG><a name="[120]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetOscConfig), UNUSED)

<P><STRONG><a name="[55]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[56]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[c]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 524 bytes, Stack size 20 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1SysClockFreq
</UL>

<P><STRONG><a name="[57]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_MCOConfig), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[58]"></a>HAL_RCC_NMI_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_NMI_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_CSSCallback
</UL>

<P><STRONG><a name="[6f]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 746 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_OscConfig), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[121]"></a>HAL_ResumeTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_ResumeTick), UNUSED)

<P><STRONG><a name="[122]"></a>HAL_SYSCFG_AnalogSwitchConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_AnalogSwitchConfig), UNUSED)

<P><STRONG><a name="[123]"></a>HAL_SYSCFG_CompensationCodeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_CompensationCodeConfig), UNUSED)

<P><STRONG><a name="[124]"></a>HAL_SYSCFG_CompensationCodeSelect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_CompensationCodeSelect), UNUSED)

<P><STRONG><a name="[125]"></a>HAL_SYSCFG_DisableIOSpeedOptimize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_DisableIOSpeedOptimize), UNUSED)

<P><STRONG><a name="[126]"></a>HAL_SYSCFG_DisableVREFBUF</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_DisableVREFBUF), UNUSED)

<P><STRONG><a name="[127]"></a>HAL_SYSCFG_EnableIOSpeedOptimize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_EnableIOSpeedOptimize), UNUSED)

<P><STRONG><a name="[5a]"></a>HAL_SYSCFG_EnableVREFBUF</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_EnableVREFBUF), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[128]"></a>HAL_SYSCFG_VDDMMC_CompensationCodeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_VDDMMC_CompensationCodeConfig), UNUSED)

<P><STRONG><a name="[129]"></a>HAL_SYSCFG_VREFBUF_HighImpedanceConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_VREFBUF_HighImpedanceConfig), UNUSED)

<P><STRONG><a name="[12a]"></a>HAL_SYSCFG_VREFBUF_TrimmingConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_VREFBUF_TrimmingConfig), UNUSED)

<P><STRONG><a name="[12b]"></a>HAL_SYSCFG_VREFBUF_VoltageScalingConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SYSCFG_VREFBUF_VoltageScalingConfig), UNUSED)

<P><STRONG><a name="[12c]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig), UNUSED)

<P><STRONG><a name="[5d]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_Callback), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_Config), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[5c]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[12d]"></a>HAL_SetFMCMemorySwappingConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SetFMCMemorySwappingConfig), UNUSED)

<P><STRONG><a name="[5e]"></a>HAL_SetTickFreq</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_SetTickFreq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[12e]"></a>HAL_SuspendTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_SuspendTick), UNUSED)

<P><STRONG><a name="[5f]"></a>Init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flashprg.o(i.Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_Init
</UL>

<P><STRONG><a name="[63]"></a>MX_OCTOSPI1_Init</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, ospi_w25q64.o(i.MX_OCTOSPI1_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_DeInit
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPIM_Config
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_Init
</UL>

<P><STRONG><a name="[64]"></a>OSPI_W25Qxx_AutoPollingMemReady</STRONG> (Thumb, 130 bytes, Stack size 104 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_AutoPollingMemReady), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WritePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_SectorErase
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_32K
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadBuffer
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_64K
</UL>

<P><STRONG><a name="[65]"></a>OSPI_W25Qxx_BlockErase_32K</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_BlockErase_32K), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
</UL>

<P><STRONG><a name="[3]"></a>OSPI_W25Qxx_BlockErase_64K</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_BlockErase_64K), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
</UL>

<P><STRONG><a name="[1]"></a>OSPI_W25Qxx_ChipErase</STRONG> (Thumb, 154 bytes, Stack size 104 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_ChipErase), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseChip
</UL>

<P><STRONG><a name="[62]"></a>OSPI_W25Qxx_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadID
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[68]"></a>OSPI_W25Qxx_MemoryMappedMode</STRONG> (Thumb, 116 bytes, Stack size 96 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_MemoryMappedMode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
</UL>

<P><STRONG><a name="[69]"></a>OSPI_W25Qxx_ReadBuffer</STRONG> (Thumb, 136 bytes, Stack size 96 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_ReadBuffer), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Verify
</UL>

<P><STRONG><a name="[67]"></a>OSPI_W25Qxx_ReadID</STRONG> (Thumb, 114 bytes, Stack size 96 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_ReadID), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_Init
</UL>

<P><STRONG><a name="[6a]"></a>OSPI_W25Qxx_SectorErase</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_SectorErase), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
</UL>

<P><STRONG><a name="[6b]"></a>OSPI_W25Qxx_WriteBuffer</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_WriteBuffer), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
</UL>

<P><STRONG><a name="[66]"></a>OSPI_W25Qxx_WriteEnable</STRONG> (Thumb, 184 bytes, Stack size 104 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_WriteEnable), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WritePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_SectorErase
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_32K
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ChipErase
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_BlockErase_64K
</UL>

<P><STRONG><a name="[6c]"></a>OSPI_W25Qxx_WritePage</STRONG> (Thumb, 142 bytes, Stack size 96 bytes, ospi_w25q64.o(i.OSPI_W25Qxx_WritePage), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteBuffer
</UL>

<P><STRONG><a name="[6d]"></a>ProgramPage</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, flashprg.o(i.ProgramPage), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_WriteBuffer
</UL>

<P><STRONG><a name="[61]"></a>SystemClock_Config</STRONG> (Thumb, 220 bytes, Stack size 304 bytes, systemconfig.o(i.SystemClock_Config), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[12f]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, system_stm32h7xx.o(i.SystemCoreClockUpdate), UNUSED)

<P><STRONG><a name="[60]"></a>SystemInit</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, system_stm32h7xx.o(i.SystemInit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[70]"></a>UnInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flashprg.o(i.UnInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_Init
</UL>

<P><STRONG><a name="[71]"></a>Verify</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flashprg.o(i.Verify), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_W25Qxx_ReadBuffer
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[17]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriorityGrouping
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[19]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_SetPriority), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1b]"></a>OSPIM_GetConfig</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, stm32h7xx_hal_ospi.o(i.OSPIM_GetConfig), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPIM_Config
</UL>

<P><STRONG><a name="[21]"></a>OSPI_ConfigCmd</STRONG> (Thumb, 662 bytes, Stack size 24 bytes, stm32h7xx_hal_ospi.o(i.OSPI_ConfigCmd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command_IT
</UL>

<P><STRONG><a name="[1d]"></a>OSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32h7xx_hal_ospi.o(i.OSPI_WaitFlagStateUntilTimeout), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Transmit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Receive
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_MemoryMapped
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_HyperbusCmd
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_HyperbusCfg
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Command_IT
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_AutoPolling_IT
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_OSPI_Abort
</UL>

<P><STRONG><a name="[51]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 304 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[52]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 304 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[11]"></a>MDMA_Init</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(i.MDMA_Init), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init
</UL>

<P><STRONG><a name="[14]"></a>MDMA_SetConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(i.MDMA_SetConfig), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start_IT
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
